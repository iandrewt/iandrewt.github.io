.navicon {
  background: $navicon-content-bg;
  border-radius: $navicon-width;
  height: $navicon-height;
  position: relative;
  transition-duration: $navicon-duration;
  width: $navicon-width;

  &::before,
  &::after {
    background: $navicon-content-bg;
    border-radius: $navicon-width;
    content: '';
    display: block;
    height: $navicon-height;
    position: absolute;
    transition-duration: $navicon-duration $navicon-duration / 2;
    width: $navicon-width;
  }

  &::before {
    top: (2 * $navicon-height);
  }

  &::after {
    top: (-2 * $navicon-height);
  }
}

.navicon-button {
  background-color: transparent;
  border: 0;
  cursor: pointer;
  display: inline-block;
  line-height: 5 * $navicon-height;
  min-height: $site-image-height;
  outline: none;
  padding: 0.90625rem 0;
  position: relative;
  transition: $navicon-duration / 2;
  user-select: none;

  &.open {
    background-color: transparent;
  }

  .navicon::before,
  .navicon::after {
    transition-duration: $navicon-duration / 2;
  }

  &:hover {
    transition-duration: $navicon-duration;

    .navicon::before,
    .navicon::after {
      transition-duration: $navicon-duration / 2;
    }

    .navicon::before {
      top: (2.5 * $navicon-height);
    }

    .navicon::after {
      top: (-2.5 * $navicon-height);
    }
  }
}

.open:not(.steps) .navicon::before,
.open:not(.steps) .navicon::after {
  top: 0 !important;
}

.open {
  transform: scale($navicon-toggled-size);

  .navicon::before,
  .navicon::after {
    transition-duration: $navicon-duration;
  }

  /* Arrows */
  &.larr .navicon,
  &.rarr .navicon,
  &.uarr .navicon {
    &::before,
    &::after {
      width: (0.6 * $navicon-width);
    }

    &::before {
      transform: rotate(35deg);
      transform-origin: left top;
    }

    &::after {
      transform: rotate(-35deg);
      transform-origin: left bottom;
    }
  }

  &.uarr {
    transform: scale($navicon-toggled-size) rotate(90deg);
  }

  &.rarr .navicon {
    &::before {
      transform: translateX(1em) rotate(-35deg);
      transform-origin: right top;
    }

    &::after {
      transform: translateX(1em) rotate(35deg);
      transform-origin: right bottom;
    }
  }
}
